service: lambdaApiUsers
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:us-east-1:774072272771:table/Users

    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: arn:aws:dynamodb:us-east-1:774072272771:table/Users

    - Effect: Allow
      Action: dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:us-east-1:774072272771:table/Users

    - Effect: Allow
      Action:
        - sns:Publish
      Resource: 'arn:aws:sns:us-east-1:774072272771:UserSNSNotification'



functions:
  hello:
    handler: src/handler.hello
    events:
      - httpApi:
          path: /
          method: get
  createUser:
    handler: src/addUser.addUser
    events:
      - httpApi:
          path: /user
          method: post
  allUsers:
    handler: src/listUsers.listUsers
    events:
      - httpApi:
          path: /users
          method: get
  GetUsersById:
    handler: src/getUser.getUser
    events:
      - httpApi:
          path: /getUserById/{id}
          method: get
  deleteUsersById:
    handler: src/deleteUser.deleteUser
    events:
      - httpApi:
          path: /deleteUserById/{id}
          method: delete
  updateUsersById:
    handler: src/updateUser.updateUser
    events:
      - httpApi:
          path: /updateUserById/{id}
          method: put
  sendEmailSNS:
    handler: src/sendEmail.sendEmail
    events:
      - httpApi:
          path: /sendEmail
          method: post

resources:
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    UserSNSNotification:
        Type: AWS::SNS::Topic
        Properties:
          DisplayName: "User SNS Notification"
          TopicName: "UserSNSNotification"
